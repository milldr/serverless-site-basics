# Deploy resources for static site
#
# Note: For the first deployment, AWS requires that you manually add the CNAME for the new ACM Cert to your domain. 
# "When you use the AWS::CertificateManager::Certificate resource in an AWS CloudFormation stack, the stack will remain in the CREATE_IN_PROGRESS state. Further stack operations will be delayed until you validate the certificate request, either by acting upon the instructions in the validation email, or by adding a CNAME record to your DNS configuration."
#
AWSTemplateFormatVersion: 2010-09-09
Parameters:
  SiteName:
    Default: "mystaticsite.com"
    Type: String
  HostedzoneID: 
    Default: Z2FDTNDATAQYW2 # This is always the hosted zone ID when you create an alias record that routes traffic to a CloudFront distribution.
    Type: String
Resources:
  StaticContent:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref SiteName
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Statement:
        - Sid: PolicyForStaticSite
          Effect: Allow
          Principal:
            CanonicalUser: !GetAtt CloudfrontOriginAccessIdentity.S3CanonicalUserId
          Action: "s3:GetObject"
          Resource: !Sub "arn:aws:s3:::${ SiteName }/*"
      Bucket: !Ref StaticContent
  AcmCert:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref SiteName
      SubjectAlternativeNames: 
          - !Sub "www.${ SiteName }"
      ValidationMethod: DNS
  CloudfrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub 'CloudFront OAI for ${ SiteName }'
  CloudfrontDistro:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: !Sub 'CloudFront Distribution for ${ SiteName }'
        Origins:
        - DomainName: !GetAtt StaticContent.DomainName
          Id: S3Origin
          S3OriginConfig: 
            OriginAccessIdentity:
              !Sub "origin-access-identity/cloudfront/${ CloudfrontOriginAccessIdentity }"
        Enabled: true
        HttpVersion: 'http2'
        DefaultRootObject: index.html
        Aliases:
          - !Sub "www.${ SiteName }"
          - !Sub "${ SiteName }"
        DefaultCacheBehavior:
          AllowedMethods:
          - GET
          - HEAD
          Compress: true
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: all
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: !Ref AcmCert
          SslSupportMethod: sni-only
    DependsOn:
      - StaticContent
      - BucketPolicy
      - CloudfrontOriginAccessIdentity
      - AcmCert
  Dns:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      Comment: !Sub "Cloudfront DNS for ${ SiteName }"
      HostedZoneName: !Sub "${ SiteName }."
      RecordSets:
      - Name: !Sub "${ SiteName }"
        Type: A
        AliasTarget:
          HostedZoneId: !Ref HostedzoneID
          DNSName: !GetAtt CloudfrontDistro.DomainName

